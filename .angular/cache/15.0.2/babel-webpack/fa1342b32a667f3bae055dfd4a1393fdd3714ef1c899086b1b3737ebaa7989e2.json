{"ast":null,"code":"import { catchError, of, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemonList() {\n    return this.http.get('api/pokemons').pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, [])));\n  }\n  getPokemonByiD(pokemonId) {\n    return this.http.get(`api/pokemons/${pokemonId}`).pipe(tap(response => this.log(response)), catchError(error => this.handleError(error, undefined)));\n  }\n  log(response) {\n    console.table(response);\n  }\n  handleError(error, errorValue) {\n    console.error(error);\n    return of(errorValue);\n  }\n  getPokemonTypeList() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n  }\n  static #_ = this.ɵfac = function PokemonService_Factory(t) {\n    return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PokemonService,\n    factory: PokemonService.ɵfac\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,EAAcC,EAAE,EAAEC,GAAG,QAAQ,MAAM;;;AAItD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAc;EAEtCC,cAAc;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAY,cAAc,CAAC,CAACC,IAAI,CAClDN,GAAG,CAAEO,QAAQ,IAAK,IAAI,CAACC,GAAG,CAACD,QAAQ,CAAC,CAAC,EACrCT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAE,EAAE,CAAC,CAAC,CACnD;EACH;EAEAE,cAAc,CAACC,SAAiB;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAU,gBAAgBO,SAAS,EAAE,CAAC,CAACN,IAAI,CAC7DN,GAAG,CAAEO,QAAQ,IAAK,IAAI,CAACC,GAAG,CAACD,QAAQ,CAAC,CAAC,EACrCT,UAAU,CAAEW,KAAK,IAAK,IAAI,CAACC,WAAW,CAACD,KAAK,EAAEI,SAAS,CAAC,CAAC,CAC1D;EACH;EAEQL,GAAG,CAACD,QAAqC;IAC/CO,OAAO,CAACC,KAAK,CAACR,QAAQ,CAAC;EACzB;EAEQG,WAAW,CAACD,KAAY,EAAEO,UAAe;IAC/CF,OAAO,CAACL,KAAK,CAACA,KAAK,CAAC;IACpB,OAAOV,EAAE,CAACiB,UAAU,CAAC;EACvB;EAGAC,kBAAkB;IAChB,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,EACL,QAAQ,EACR,KAAK,CACN;EACH;EAAC;qBA1CUhB,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;EAAA","names":["catchError","of","tap","PokemonService","constructor","http","getPokemonList","get","pipe","response","log","error","handleError","getPokemonByiD","pokemonId","undefined","console","table","errorValue","getPokemonTypeList","factory"],"sourceRoot":"","sources":["/Users/teddybandama/Desktop/Pokemon/src/app/pokemon/pokemon.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, Observable, of, tap } from 'rxjs';\nimport { Pokemon } from './pokemon';\n\n@Injectable()\nexport class PokemonService {\n\n  constructor(private http: HttpClient){}\n\n  getPokemonList(): Observable<Pokemon[]> {\n    return this.http.get<Pokemon[]>('api/pokemons').pipe(\n      tap((response) => this.log(response)),\n      catchError((error) => this.handleError(error, []))\n    );\n  }\n\n  getPokemonByiD(pokemonId: number): Observable<Pokemon|undefined> {\n    return this.http.get<Pokemon>(`api/pokemons/${pokemonId}`).pipe(\n      tap((response) => this.log(response)),\n      catchError((error) => this.handleError(error, undefined))\n    );\n  }\n\n  private log(response: Pokemon[]|Pokemon|undefined) {\n    console.table(response);\n  }\n\n  private handleError(error: Error, errorValue: any) {\n    console.error(error);\n    return of(errorValue);\n  }\n\n\n  getPokemonTypeList(): string[] {\n    return [\n      'Plante',\n      'Feu',\n      'Eau',\n      'Insecte',\n      'Normal',\n      'Electrik',\n      'Poison',\n      'Fée',\n      'Vol',\n      'Combat',\n      'Psy'\n    ];\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}